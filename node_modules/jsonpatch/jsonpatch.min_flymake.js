(function(root,factory){if(typeof exports==="object"){factory(module.exports)}else{if(typeof define==="function"&&define.amd){define(["exports"],factory)}else{root.jsonpatch={};root.returnExports=factory(root.jsonpatch)}}}(this,function(exports){var apply_patch,JSONPatch,JSONPointer,_operationRequired,isArray;isArray=Array.isArray||function(obj){return Object.prototype.toString.call(obj)=="[object Array]"};exports.apply_patch=apply_patch=function(doc,patch){return(new JSONPatch(patch)).apply(doc)};function InvalidPatch(message){Error.call(this,message);this.message=message}exports.InvalidPatch=InvalidPatch;InvalidPatch.prototype=new Error();function PatchApplyError(message){Error.call(this,message);this.message=message}exports.PatchApplyError=PatchApplyError;PatchApplyError.prototype=new Error();exports.JSONPointer=JSONPointer=function JSONPointer(pathStr){var i,split,path=[];split=pathStr.split("/");if(""!==split[0]){throw new InvalidPatch("JSONPointer must start with a slash (or be an empty string)!")}for(i=1;i<split.length;i++){path[i-1]=split[i].replace(/~1/g,"/").replace(/~0/g,"~")}this.path=path;this.length=path.length};JSONPointer.prototype._get_segment=function(index,node){var segment=this.path[index];if(isArray(node)){if("-"===segment){segment=node.length}else{if(!segment.match(/^[0-9]*$/)){throw new PatchApplyError("Expected a number to segment an array")}segment=parseInt(segment,10)}}return segment};function clone(o){var cloned,key;if(isArray(o)){return o.slice()}if(o===null){return o}else{if(typeof o==="object"){cloned={};for(key in o){if(Object.hasOwnProperty.call(o,key)){cloned[key]=o[key]}}return cloned}else{return o}}}JSONPointer.prototype._action=function(doc,handler,mutate){var that=this;function follow_pointer(node,index){var segment,subnode;if(!mutate){node=clone(node)}segment=that._get_segment(index,node);if(index==that.path.length-1){node=handler(node,segment)}else{if(isArray(node)){if(node.length<=segment){throw new PatchApplyError("Path not found in document")}}else{if(typeof node==="object"){if(!Object.hasOwnProperty.call(node,segment)){throw new PatchApplyError("Path not found in document")}}else{throw new PatchApplyError("Path not found in document")}}subnode=follow_pointer(node[segment],index+1);if(!mutate){node[segment]=subnode}}return node}return follow_pointer(doc,0)};JSONPointer.prototype.add=function(doc,value,mutate){if(0===this.length){return value}return this._action(doc,function(node,lastSegment){if(isArray(node)){if(lastSegment>node.length){throw new PatchApplyError("Add operation must not attempt to create a sparse array!")}node.splice(lastSegment,0,clone(value))}else{node[lastSegment]=clone(value)}return node},mutate)};JSONPointer.prototype.remove=function(doc,mutate){if(0===this.length){return undefined}return this._action(doc,function(node,lastSegment){if(!Object.hasOwnProperty.call(node,lastSegment)){throw new PatchApplyError("Remove operation must point to an existing value!")}if(isArray(node)){node.splice(lastSegment,1)}else{delete node[lastSegment]}return node},mutate)};JSONPointer.prototype.replace=function(doc,value,mutate){if(0===this.length){return value}return this._action(doc,function(node,lastSegment){if(!Object.hasOwnProperty.call(node,lastSegment)){throw new PatchApplyError("Replace operation must point to an existing value!")}if(isArray(node)){node.splice(lastSegment,1,clone(value))}else{node[lastSegment]=clone(value)}return node},mutate)};JSONPointer.prototype.get=function(doc){var value;if(0===this.length){return doc}this._action(doc,function(node,lastSegment){value=node[lastSegment];return node},true);return value};JSONPointer.prototype.subsetOf=function(otherPointer){if(this.length<=otherPointer.length){return false}for(var i=0;i<otherPointer.length;i++){if(otherPointer.path[i]!==this.path[i]){return false}}return true};_operationRequired={add:["value"],replace:["value"],test:["value"],remove:[],move:["from"],copy:["from"]};function deepEqual(a,b){var key;if(a===b){return true}else{if(typeof a!==typeof b){return false}else{if("object"===typeof(a)){var aIsArray=isArray(a),bIsArray=isArray(b);if(aIsArray!==bIsArray){return false}else{if(aIsArray){if(a.length!=b.length){return false}else{for(var i=0;i<a.length;i++){return deepEqual(a[i],b[i])}}}else{for(key in a){if(Object.hasOwnProperty(a,key)){if(!(Object.hasOwnProperty(b,key)&&deepEqual(a[key],b[key]))){return false}}}for(key in b){if(Object.hasOwnProperty(b,key)&&!Object.hasOwnProperty(a,key)){return false}}return true}}}else{return false}}}}function validateOp(operation){var i,required;if(!operation.op){throw new InvalidPatch("Operation missing!")}if(!_operationRequired.hasOwnProperty(operation.op)){throw new InvalidPatch("Invalid operation!")}if(!("path" in operation)){throw new InvalidPatch("Path missing!")}required=_operationRequired[operation.op];for(i=0;i<required.length;i++){if(!(required[i] in operation)){throw new InvalidPatch(operation.op+" must have key "+required[i])}}}function compileOperation(operation,mutate){validateOp(operation);var op=operation.op;var path=new JSONPointer(operation.path);var value=operation.value;var from=operation.from?new JSONPointer(operation.from):null;switch(op){case"add":return function(doc){return path.add(doc,value,mutate)};case"remove":return function(doc){return path.remove(doc,mutate)};case"replace":return function(doc){return path.replace(doc,value,mutate)};case"move":if(path.subsetOf(from)){throw new InvalidPatch("destination must not be a child of source")}return function(doc){var value=from.get(doc);var intermediate=from.remove(doc,mutate);return path.add(intermediate,value,mutate)};case"copy":return function(doc){var value=from.get(doc);return path.add(doc,value,mutate)};case"test":return function(doc){if(!deepEqual(path.get(doc),value)){throw new PatchApplyError("Test operation failed. Value did not match.")}return doc}}}exports.JSONPatch=JSONPatch=function JSONPatch(patch,mutate){this._compile(patch,mutate)};JSONPatch.prototype._compile=function(patch,mutate){var i,_this=this;this.compiledOps=[];if("string"===typeof patch){patch=JSON.parse(patch)}if(!isArray(patch)){throw new InvalidPatch("Patch must be an array of operations")}for(i=0;i<patch.length;i++){var compiled=compileOperation(patch[i],mutate);_this.compiledOps.push(compiled)}};exports.JSONPatch.prototype.apply=function(doc){var i;for(i=0;i<this.compiledOps.length;i++){doc=this.compiledOps[i](doc)}return doc}}));